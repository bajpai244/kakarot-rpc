---
    name: Task - Benchmark
    
    on:
      workflow_dispatch:
      workflow_call:
      push:
      pull_request:
    
    jobs:
      benchmark:
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
            with:
              clean: false
          - name: Install submodules and dependencies
            run: |
              # git submodule update --init --recursive
              sudo apt update
              sudo apt install -y protobuf-compiler clang jq
          # - uses: actions/cache@v3
          #   id: cache
          #   with:
          #     path: |
          #       ~/.cargo/bin/
          #       ~/.cargo/registry/index/
          #       ~/.cargo/registry/cache/
          #       ~/.cargo/git/db/
          #       ./lib/madara/target/
          #     key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}-${{hashFiles('./lib/madara/Cargo.lock')}}
          # - name: Setup Rust
          #   if: steps.cache.outputs.cache-hit  != 'true'
          #   uses: actions-rs/toolchain@v1
          #   with:
          #       toolchain: stable
          # - name: Build RPC
          #   if: steps.cache.outputs.cache-hit  != 'true'
          #   run: |
          #     cargo build --release
          # - name: Build Madara
          #   if: steps.cache.outputs.cache-hit  != 'true'
          #   run: |
          #     cd ./lib/madara
          #     cargo build --release
          
          
          # Python Setup
          - uses: actions/setup-python@v4
            with:
              python-version: "3.9.13"
          - name: Load cached Poetry installation
            id: cached-poetry
            uses: actions/cache@v3
            with:
              path: ~/.local
              key: poetry-${{ runner.os }}
          - name: Install Poetry
            if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
            uses: snok/install-poetry@v1
            with:
              virtualenvs-create: true
              virtualenvs-in-project: true
              installer-parallel: true
          - name: pull kakarot submodule and setup
            run: |-
              git submodule update --init --recursive
              cd lib/kakarot
              poetry install 
              STARKNET_NETWORK=madara poetry run python ./scripts/compile_kakarot.py
          - name: Load cached venv
            id: cached-poetry-dependencies
            uses: actions/cache@v3
            with:
              path: .venv
              key: venv-${{ runner.os }}-${{ hashFiles('./lib/kakarot/poetry.lock') }}

          - name: install benchmark projects
            run: |-
              cd ./benchmarking
              npm i
          - name: Run benchmark
            run: |
              cd benchmarking
              npm run benchmark:ci
        #   - name: Compare result
        #     uses: benchmark-action/github-action-benchmark@v1
        #     with:
        #       tool: "customBiggerIsBetter"
        #       output-file-path: ./benchmarking/reports/metrics.json
        #       alert-threshold: "120%"
        #       github-token: ${{ secrets.GITHUB_TOKEN }}
        #       fail-on-alert: true
        #       summary-always: ${{ github.ref == 'refs/heads/main' }}
        #       comment-always: false
        #       comment-on-alert: false
        #       auto-push: ${{ github.ref == 'refs/heads/main' }}
    